[{"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\index.tsx":"1","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\redux\\currencyReducer.ts":"2","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\App.tsx":"3","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"4","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"5","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\redux\\actions.ts":"6","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\lessons\\lesson1\\lesson1.tsx":"7","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\redux\\selectors.ts":"8","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\lessons\\lesson2\\lesson2.ts":"9","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\lessons\\lesson3\\API.ts":"10"},{"size":319,"mtime":1609752860853,"results":"11","hashOfConfig":"12"},{"size":1760,"mtime":1627302431265,"results":"13","hashOfConfig":"12"},{"size":641,"mtime":1627898825445,"results":"14","hashOfConfig":"12"},{"size":3279,"mtime":1627300638362,"results":"15","hashOfConfig":"12"},{"size":5875,"mtime":1627312196748,"results":"16","hashOfConfig":"12"},{"size":1456,"mtime":1627302323811,"results":"17","hashOfConfig":"12"},{"size":860,"mtime":1609756877852,"results":"18","hashOfConfig":"12"},{"size":609,"mtime":1627312196755,"results":"19","hashOfConfig":"12"},{"size":6701,"mtime":1627912768343,"results":"20","hashOfConfig":"12"},{"size":326,"mtime":1601709172000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zcp7r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\index.tsx",[],["44","45"],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\redux\\currencyReducer.ts",[],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\App.tsx",[],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["46","47","48","49","50","51","52","53"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n  ChangeActionAC,\r\n  ChangeCurrencyFieldAC,\r\n  ChangeCurrentCurrencyAC,\r\n  CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  selectAllStateValues,\r\n  selectAmountOfBYN,\r\n  selectAmountOfCurrency,\r\n  selectCurrencies,\r\n  selectCurrentCurrency,\r\n  selectIsBuying\r\n} from \"../../redux/selectors\";\r\n\r\n// const CurrencyEContainer: React.FC<TProps> = props => {\r\n\r\n// const {\r\n//   currencies,\r\n//   currentCurrency,\r\n//   isBuying,\r\n//   amountOfBYN,\r\n//   amountOfCurrency,\r\n//   setCurrencyAmount,\r\n//   setAction,\r\n//   changeCurrency,\r\n// } = props;\r\n\r\n// const {\r\n//   currencies,\r\n//   currentCurrency,\r\n//   isBuying,\r\n//   amountOfBYN,\r\n//   amountOfCurrency,\r\n//   ChangeActionAC,\r\n//   ChangeCurrencyFieldAC,\r\n//   ChangeCurrentCurrencyAC\r\n// } = props;\r\n\r\n// const {\r\n//   currencies,\r\n//   currentCurrency,\r\n//   isBuying,\r\n//   amountOfBYN,\r\n//   amountOfCurrency,\r\n// } = props;\r\n\r\nconst CurrencyEContainer: React.FC = () => {\r\n\r\n  const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>();\r\n\r\n  // const currencies = useSelector(selectCurrencies)\r\n  // const currentCurrency = useSelector(selectCurrentCurrency)\r\n  // const isBuying = useSelector(selectIsBuying)\r\n  // const amountOfBYN = useSelector(selectAmountOfBYN)\r\n  // const amountOfCurrency = useSelector(selectAmountOfCurrency)\r\n\r\n  const {\r\n    currencies,\r\n    currentCurrency,\r\n    isBuying,\r\n    amountOfBYN,\r\n    amountOfCurrency,\r\n  } = useSelector(selectAllStateValues)\r\n\r\n\r\n  let currencyRate: number = 0;\r\n  const currenciesName = currencies.map((currency: CurrencyType) => {\r\n    if (currency.currencyName === currentCurrency) {\r\n      currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n    }\r\n    return currency.currencyName;\r\n  });\r\n\r\n  const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.currentTarget.value;\r\n    if (!isFinite(+value)) return;\r\n    if (e.currentTarget.dataset.currency) {\r\n      const trigger: string = e.currentTarget.dataset.currency;\r\n      if (trigger === 'byn') {\r\n        if (value === '') {\r\n          // setCurrencyAmount(value, value);\r\n          // ChangeCurrencyFieldAC(value, value)\r\n          dispatch(ChangeCurrencyFieldAC(value, value))\r\n        } else {\r\n          // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n          // ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n          dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n        }\r\n      } else {\r\n        if (value === '') {\r\n          // setCurrencyAmount(value, value);\r\n          // ChangeCurrencyFieldAC(value, value);\r\n          dispatch(ChangeCurrencyFieldAC(value, value));\r\n        } else {\r\n          // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n          //ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n          dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n    // e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);\r\n    e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n  };\r\n\r\n  const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n    // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n    // e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n    e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CurrencyExchange\r\n        currenciesName={currenciesName}\r\n        currentCurrency={currentCurrency}\r\n        currencyRate={currencyRate}\r\n        isBuying={isBuying}\r\n        amountOfBYN={amountOfBYN}\r\n        amountOfCurrency={amountOfCurrency}\r\n        changeCurrencyField={changeCurrencyField}\r\n        changeAction={changeAction}\r\n        changeCurrentCurrency={changeCurrentCurrency}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n//   return {\r\n//     currencies: currency.currencies,\r\n//     currentCurrency: currency.currentCurrency,\r\n//     isBuying: currency.isBuying,\r\n//     amountOfBYN: currency.amountOfBYN,\r\n//     amountOfCurrency: currency.amountOfCurrency,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>): any => {\r\n//   return {\r\n//     setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//       dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//     },\r\n//     setAction(isBuying: boolean) {\r\n//       dispatch(ChangeActionAC(isBuying));\r\n//     },\r\n//     changeCurrency(currency: string) {\r\n//       dispatch(ChangeCurrentCurrencyAC(currency));\r\n//     },\r\n//   };\r\n// };\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n// const connector = connect(mapStateToProps, {ChangeActionAC, ChangeCurrencyFieldAC, ChangeCurrentCurrencyAC});\r\n// const connector = connect(mapStateToProps, { });\r\n//\r\n// type TProps = ConnectedProps<typeof connector>;\r\n//\r\n// export default connector(CurrencyEContainer);\r\nexport default CurrencyEContainer;\r\n\r\n","D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\redux\\actions.ts",[],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\redux\\selectors.ts",[],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\lessons\\lesson2\\lesson2.ts",["54","55"],"D:\\Users\\briws\\WebDev\\it-incubator\\iti-js-lessons\\src\\lessons\\lesson3\\API.ts",["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":22},{"ruleId":"62","severity":1,"message":"66","line":11,"column":9,"nodeType":"64","messageId":"65","endLine":11,"endColumn":16},{"ruleId":"62","severity":1,"message":"67","line":11,"column":18,"nodeType":"64","messageId":"65","endLine":11,"endColumn":32},{"ruleId":"62","severity":1,"message":"68","line":14,"column":3,"nodeType":"64","messageId":"65","endLine":14,"endColumn":20},{"ruleId":"62","severity":1,"message":"69","line":15,"column":3,"nodeType":"64","messageId":"65","endLine":15,"endColumn":25},{"ruleId":"62","severity":1,"message":"70","line":16,"column":3,"nodeType":"64","messageId":"65","endLine":16,"endColumn":19},{"ruleId":"62","severity":1,"message":"71","line":17,"column":3,"nodeType":"64","messageId":"65","endLine":17,"endColumn":24},{"ruleId":"62","severity":1,"message":"72","line":18,"column":3,"nodeType":"64","messageId":"65","endLine":18,"endColumn":17},{"ruleId":"62","severity":1,"message":"73","line":82,"column":5,"nodeType":"64","messageId":"65","endLine":82,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":260,"column":1,"nodeType":"76","endLine":261,"endColumn":3},{"ruleId":"62","severity":1,"message":"77","line":6,"column":7,"nodeType":"64","messageId":"65","endLine":6,"endColumn":10},{"ruleId":"62","severity":1,"message":"78","line":7,"column":7,"nodeType":"64","messageId":"65","endLine":7,"endColumn":20},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'selectAmountOfBYN' is defined but never used.","'selectAmountOfCurrency' is defined but never used.","'selectCurrencies' is defined but never used.","'selectCurrentCurrency' is defined but never used.","'selectIsBuying' is defined but never used.","'globalScope' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'key' is assigned a value but never used.","'axiosInstance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]